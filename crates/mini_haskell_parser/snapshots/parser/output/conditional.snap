---
source: crates/mini_haskell_parser/src/parser.rs
expression: asts
---
[
    Ok(
        Expr {
            kind: CondExpr(
                CondExpr {
                    condition: Expr {
                        kind: Literal(
                            Bool(
                                false,
                            ),
                        ),
                        span: Span {
                            start: 0,
                            end: 1,
                        },
                    },
                    then_branch: Expr {
                        kind: Literal(
                            NatureNum(
                                0,
                            ),
                        ),
                        span: Span {
                            start: 4,
                            end: 5,
                        },
                    },
                    else_branch: Expr {
                        kind: BinaryExpr(
                            BinaryExpr {
                                lhs: Expr {
                                    kind: BinaryExpr(
                                        BinaryExpr {
                                            lhs: Expr {
                                                kind: Literal(
                                                    NatureNum(
                                                        1,
                                                    ),
                                                ),
                                                span: Span {
                                                    start: 8,
                                                    end: 9,
                                                },
                                            },
                                            op: Less,
                                            rhs: Expr {
                                                kind: Literal(
                                                    NatureNum(
                                                        0,
                                                    ),
                                                ),
                                                span: Span {
                                                    start: 12,
                                                    end: 13,
                                                },
                                            },
                                        },
                                    ),
                                    span: Span {
                                        start: 10,
                                        end: 11,
                                    },
                                },
                                op: Ampersand,
                                rhs: Expr {
                                    kind: BinaryExpr(
                                        BinaryExpr {
                                            lhs: Expr {
                                                kind: Literal(
                                                    NatureNum(
                                                        2,
                                                    ),
                                                ),
                                                span: Span {
                                                    start: 16,
                                                    end: 17,
                                                },
                                            },
                                            op: Equal,
                                            rhs: Expr {
                                                kind: Literal(
                                                    NatureNum(
                                                        3,
                                                    ),
                                                ),
                                                span: Span {
                                                    start: 20,
                                                    end: 21,
                                                },
                                            },
                                        },
                                    ),
                                    span: Span {
                                        start: 18,
                                        end: 19,
                                    },
                                },
                            },
                        ),
                        span: Span {
                            start: 14,
                            end: 15,
                        },
                    },
                },
            ),
            span: Span {
                start: 0,
                end: 15,
            },
        },
    ),
]
